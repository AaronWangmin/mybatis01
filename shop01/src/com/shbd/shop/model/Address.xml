<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shbd.shop.model.Address">
	<insert id="add" parameterType="Address">
		insert into t_address
		(name,phone,postcode,user_id) value
		(#{name},#{phone},#{postcode},#{user.id})
	</insert>

	<update id="update" parameterType="Address">
		update t_address set name =
		#{name},phone = #{phone},postcode=#{postcode} where id = #{id}
	</update>
	
	

	<delete id="delete" parameterType="int">
		delete from t_address where id=#{id}
	</delete>
	
	<!--当数据库中的字段信息和对象的属性不一致时，要通过resultMap来映射
	 config the field in DB and the property in class -->
	 
	<resultMap type="Address" id="address" autoMapping="true">
		<id column="a_id" property="id"/>
		<!-- 使用以下方式进行关联对象查询，最大的问题就是N+1问题，即：两条SQL语句查询，不建议使用。 -->
<!-- 		<association property="user" column="user_id" javaType="User" select="com.shbd.shop.model.User.load"></association> -->
		
		<association property="user" javaType="User" >
			<id column="user_id" property="id"/>
			<result column="username" property="username"/>		
			<result column="password" property="password"/>
			<result column="nickname" property="nickname"/>
			<result column="type" property="type"/>	
		</association>
		
	</resultMap>
	
	<select id="load" parameterType="int" resultMap="address">
		select *,t1.id as 'a_id' from t_address t1 right join t_user t2 on(t1.user_id=t2.id) where t1.id = #{id}
	</select>

	<select id="list" parameterType="map" resultMap="address">
		select *,t1.id as 'a_id' from t_address t1 right join t_user t2 on(t1.user_id=t2.id) where t2.id = #{userId}
	</select>

</mapper>